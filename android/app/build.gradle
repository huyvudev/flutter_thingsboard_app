plugins {
    id 'com.android.application'
    // START: FlutterFire Configuration
    // id 'com.google.gms.google-services'   // b·∫≠t n·∫øu b·∫°n d√πng Firebase
    // END: FlutterFire Configuration
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def getDartDefineValue = { key ->
    def dartDefines = [:]
    if (project.hasProperty('dart-defines')) {
        dartDefines = project.property('dart-defines')
                .split(',')
                .collectEntries { entry ->
                    def pair = new String(entry.decodeBase64(), 'UTF-8').split('=')
                    [(pair.first()): pair.last()]
                }
    }
    return dartDefines[key]
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

def customScheme      = getDartDefineValue('thingsboardOAuth2CallbackUrlScheme') ?: 'org.thingsboard.app.auth'
def customLabel       = getDartDefineValue('androidApplicationName') ?: 'Thingsboard app'
def appLinksUrlHost   = getDartDefineValue('appLinksUrlHost') ?: 'demo.thingsboard.io'
def webPathPrefix     = getDartDefineValue('webPathPrefix') ?: '/api/noauth/qr'
def appLinksUrlScheme = getDartDefineValue('appLinksUrlScheme') ?: 'https'

android {
    namespace "org.thingsboard.app"
    compileSdkVersion 34

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId (getDartDefineValue('androidApplicationId') ?: "org.thingsboard.app")
        minSdkVersion 24
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        manifestPlaceholders = [
                authScheme       : customScheme,
                appLabel         : customLabel,
                appLinksUrlHost  : appLinksUrlHost,
                webPathPrefix    : webPathPrefix,
                appLinksUrlScheme: appLinksUrlScheme
        ]
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    // üîê k√Ω release b·∫±ng keystore t·ª´ key.properties
    signingConfigs {
        release {
            def keystoreProperties = new Properties()
            def keystorePropertiesFile = rootProject.file("key.properties")
            if (keystorePropertiesFile.exists()) {
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            // d√πng keystore release (kh√¥ng d√πng debug key)
            signingConfig signingConfigs.release

            // t·ªëi ∆∞u b·∫£n ph√°t h√†nh
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
        // debug gi·ªØ m·∫∑c ƒë·ªãnh
    }

    // ƒë·∫∑t t√™n file APK khi build apk (kh√¥ng ·∫£nh h∆∞·ªüng AAB)
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def builtType = variant.buildType.name
            def versionName = variant.versionName
            def versionCode = variant.versionCode
            outputFileName = "${customLabel}-${builtType}-${versionName}+${versionCode}.apk"
        }
    }
}

// ‚¨áÔ∏è L∆ØU √ù: dependencies ph·∫£i ƒë·∫∑t ·ªû NGO√ÄI kh·ªëi android {}
dependencies {
    implementation 'androidx.browser:browser:1.7.0'       // c√≥ th·ªÉ gi·ªØ 1.0.0 n·∫øu mu·ªën
    implementation 'androidx.window:window:1.3.0'
    implementation 'androidx.window:window-java:1.3.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
}

flutter {
    source '../..'
}
